// <auto-generated />
using CrunchyPeanutButter.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CrunchyPeanutButter.Data.Migrations.Migrations
{
    [DbContext(typeof(CrunchyPeanutButterDbContext))]
    partial class CrunchyPeanutButterDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CrunchyPeanutButter.Domain.Models.Bar", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Bars");
                });

            modelBuilder.Entity("CrunchyPeanutButter.Domain.Models.Foo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Foos");
                });

            modelBuilder.Entity("CrunchyPeanutButter.Domain.Models.FooBar", b =>
                {
                    b.Property<int>("FooId")
                        .HasColumnType("int");

                    b.Property<int>("BarId")
                        .HasColumnType("int");

                    b.HasKey("FooId", "BarId");

                    b.HasIndex("BarId");

                    b.ToTable("FooBar");
                });

            modelBuilder.Entity("CrunchyPeanutButter.Domain.Models.FooBar", b =>
                {
                    b.HasOne("CrunchyPeanutButter.Domain.Models.Bar", "Bar")
                        .WithMany()
                        .HasForeignKey("BarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CrunchyPeanutButter.Domain.Models.Foo", "Foo")
                        .WithMany("Bars")
                        .HasForeignKey("FooId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
